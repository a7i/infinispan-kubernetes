apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ include "infinispan.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "infinispan.name" . }}
    helm.sh/chart: {{ include "infinispan.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "infinispan.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "infinispan.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - args:
        - cloud
        - -Djboss.default.jgroups.stack=kubernetes
        env:
        - name: KUBERNETES_LABELS
          value: app.kubernetes.io/instance={{ .Release.Name }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: APP_USER
          valueFrom:
            secretKeyRef:
              key: application-user
              name: {{ include "infinispan.fullname" . }}
        - name: APP_PASS
          valueFrom:
            secretKeyRef:
              key: application-password
              name: {{ include "infinispan.fullname" . }}   
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/is_running.sh
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 80
        name: {{ .Release.Name }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9990
          name: management
          protocol: TCP
        - containerPort: 8888
          name: ping
          protocol: TCP
        - containerPort: 11222
          name: hotrod
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/is_healthy.sh
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 80
        resources:
{{ toYaml .Values.resources | indent 10 }}
      terminationGracePeriodSeconds: 120
